name: Build project

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux-x11-64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Godot
      run: |
        echo "===== DOWNLOADING GODOT EXECUTABLE ====="
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_linux_headless.64.zip && \
        unzip Godot_v3.2.1-stable_linux_headless.64.zip && \
        mv -v Godot_v3.2.1-stable_linux_headless.64 godot;
        echo "===== DOWNLOADING EXPORT TEMPLATES ====="
        mkdir -vp ~/.local/share/godot/templates/3.2.1.stable/ && \
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_export_templates.tpz && \
        unzip Godot_v3.2.1-stable_export_templates.tpz && \
        mv templates/* ~/.local/share/godot/templates/3.2.1.stable/;
        
        mkdir -vp ../out;
    - name: Build project
      run: ./godot --export linux-x11-64 ../out/godot-android-test-linux-x11-64 project.godot;
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: godot-android-test-linux-x11-64
        path: ../out
  windows-64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Godot
      run: |
        echo "===== DOWNLOADING GODOT EXECUTABLE ====="
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_linux_headless.64.zip && \
        unzip Godot_v3.2.1-stable_linux_headless.64.zip && \
        mv -v Godot_v3.2.1-stable_linux_headless.64 godot;
        echo "===== DOWNLOADING EXPORT TEMPLATES ====="
        mkdir -vp ~/.local/share/godot/templates/3.2.1.stable/ && \
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_export_templates.tpz && \
        unzip Godot_v3.2.1-stable_export_templates.tpz && \
        mv templates/* ~/.local/share/godot/templates/3.2.1.stable/;
        
        mkdir -vp ../out;
    - name: Build project
      run: ./godot --export windows-64 ../out/godot-android-test-windows-64.exe project.godot;
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: godot-android-test-windows-64
        path: ../out
  macos:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Godot
      run: |
        echo "===== DOWNLOADING GODOT EXECUTABLE ====="
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_linux_headless.64.zip && \
        unzip Godot_v3.2.1-stable_linux_headless.64.zip && \
        mv -v Godot_v3.2.1-stable_linux_headless.64 godot;
        echo "===== DOWNLOADING EXPORT TEMPLATES ====="
        mkdir -vp ~/.local/share/godot/templates/3.2.1.stable/ && \
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_export_templates.tpz && \
        unzip Godot_v3.2.1-stable_export_templates.tpz && \
        mv templates/* ~/.local/share/godot/templates/3.2.1.stable/;
    - name: Build project
      run: ./godot --export macos godot-android-test-macos.dmg project.godot;
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: godot-android-test-macos.dmg
        path: godot-android-test-macos.dmg
  android:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Godot
      run: |
        echo "===== DOWNLOADING GODOT EXECUTABLE ====="
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_linux_headless.64.zip && \
        unzip Godot_v3.2.1-stable_linux_headless.64.zip && \
        mv -v Godot_v3.2.1-stable_linux_headless.64 godot;
        echo "===== DOWNLOADING EXPORT TEMPLATES ====="
        mkdir -vp ~/.local/share/godot/templates/3.2.1.stable/ && \
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_export_templates.tpz && \
        unzip Godot_v3.2.1-stable_export_templates.tpz && \
        mv templates/* ~/.local/share/godot/templates/3.2.1.stable/;
    - name: Configure Godot
      run: |
        # Let godot generate editor_settings-3.tres
        ./godot -e -q
        # Replace custom settings
        sed -i 's|export/android/adb.*|export/android/adb = "/usr/local/lib/android/sdk/platform-tools/adb"|' ~/.config/godot/editor_settings-3.tres;
        sed -i 's|export/android/jarsigner.*|export/android/jarsigner = "/usr/bin/jarsigner"|' ~/.config/godot/editor_settings-3.tres;
    - name: Printing debug info
      run: |
        echo "===== ENVIRONMENT VARIABLES ===="
        env
        echo "===== DIRECTORY INDEX OF $ANDROID_HOME (2 LEVELS) ====="
        ls $ANDROID_HOME/*
        echo "===== DETAILS ABOUT ADB ====="
        file $ANDROID_HOME/platform-tools/adb
        stat $ANDROID_HOME/platform-tools/adb
        echo "===== DETAILS ABOUT JARSIGNER ====="
        JARSIGNER=$(which jarsigner)
        file $JARSIGNER
        stat $JARSIGNER
        echo "===== CONTENTS OF EDITOR-SETTINGS (~/.config/godot/editor_settings-3.tres) ====="
        cat ~/.config/godot/editor_settings-3.tres
        echo "===== DETAILS ABOUT debug.keystore ====="
        file debug.keystore
        stat debug.keystore
        echo "===== DETAILS ABOUT EXPORT TEMPLATES ====="
        echo "~/.local/share/godot/templates/3.2.1.stable/"
        file ~/.local/share/godot/templates/3.2.1.stable/
        ls ~/.local/share/godot/templates/3.2.1.stable/
    - name: Build project
      run: ./godot --export-debug android godot-android-test-android.apk project.godot;
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: godot-android-test-android.apk
        path: godot-android-test-android.apk
  android-signed:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Godot
      run: |
        echo "===== DOWNLOADING GODOT EXECUTABLE ====="
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_linux_headless.64.zip && \
        unzip Godot_v3.2.1-stable_linux_headless.64.zip && \
        mv -v Godot_v3.2.1-stable_linux_headless.64 godot;
        echo "===== DOWNLOADING EXPORT TEMPLATES ====="
        mkdir -vp ~/.local/share/godot/templates/3.2.1.stable/ && \
        curl -O https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_export_templates.tpz && \
        unzip Godot_v3.2.1-stable_export_templates.tpz && \
        mv templates/* ~/.local/share/godot/templates/3.2.1.stable/;
    - name: Decrypt signing key
      run: |
        gpg --quiet --batch --yes --passphrase="$DECRYPTION_KEY" --output release.keystore release.keystore.gpg
      env:
        DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
    - name: Configure Godot
      run: |
        # Let godot generate editor_settings-3.tres
        ./godot -e -q
        # Replace custom settings
        sed -i 's|export/android/adb.*|export/android/adb = "/usr/local/lib/android/sdk/platform-tools/adb"|' ~/.config/godot/editor_settings-3.tres;
        sed -i 's|export/android/jarsigner.*|export/android/jarsigner = "/usr/bin/jarsigner"|' ~/.config/godot/editor_settings-3.tres;
    - name: Insert keystore pass
      run: |
        sed -i 's|<SECRET-PASSWORD>|'$KEYSTORE_PASS'|' export_presets.cfg
        cat export_presets.cfg
      env:
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
    - name: Build project
      run: ./godot --export android godot-android-test-android-signed.apk project.godot;
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: godot-android-test-android-signed.apk
        path: godot-android-test-android-signed.apk
